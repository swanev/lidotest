# use files parameter to use multiple docker-compose.yml files

- include: prepare_dirs.yml

- name: Install a plugin
  community.docker.docker_plugin:
    plugin_name: grafana/loki-docker-driver:latest
    state: enable
  register: docker_loki_plugin
  tags:   
    - install
    - install-loki-plugin   

- name: Restart docker daemon
  ansible.builtin.systemd:
    name: docker
    state: restarted
    daemon_reload: yes
  when: docker_loki_plugin.changed
  tags:   
    - install
    - install-loki-plugin

- name: Uninstall a plugin
  community.docker.docker_plugin:
    plugin_name: "{{ log_driver }}"
    state: absent
  register: docker_loki_plugin_remove
  tags:   
    - uninstall-loki-plugin

- name: Restart docker daemon
  ansible.builtin.systemd:
    name: docker
    state: restarted
    daemon_reload: yes
  when: docker_loki_plugin_remove.changed
  tags:   
    - uninstall-loki-plugin

- name: deploy Docker Compose DOWN
  community.docker.docker_compose:
    project_src: "{{ base_path }}"
    state: absent
    files:
    - docker-compose.yml
  register: docker_compose_down    
  tags:
    - remove
    - upgrade    

- debug:
    var: docker_compose_down  

- name: deploy Docker Compose UP
  community.docker.docker_compose:
    project_src: "{{ base_path }}"
    state: present
    files:
    - docker-compose.yml
  register: docker_compose_up
  when: dirs_prepared.stat.exists
  tags:
    - install
    - upgrade
    - start

- debug:
    var: docker_compose_up
   
- name: Sleep for 20 seconds to give containers time to become ready
  ansible.builtin.wait_for:
    timeout: 20
  when: docker_compose_up.changed
  tags:
    - install
    - upgrade

- name: deploy Docker Compose UP
  community.docker.docker_compose:
    project_src: "{{ base_path }}"
    state: present
    files:
    - docker-compose.yml
  register: docker_compose_up
  tags:
    - check    

# - ansible.builtin.debug:
#     var: docker_compose_up
#   tags:
#     - check

- ansible.builtin.debug:
    msg:
      - " The container {{ prometheus_container_name }} is UP: {{ docker_compose_up.services.prometheus.prometheus.state.running }}"
      - " The container {{ node_exporter_service_name }} is UP: {{ docker_compose_up.services.node_exporter.node_exporter.state.running }}"
      - " The container {{ grafana_service_name }} is UP: {{ docker_compose_up.services.grafana.grafana.state.running }}"
      - " The container {{ loki_service_name }} is UP: {{ docker_compose_up.services.loki.loki.state.running }}"
      - " The container {{ promtail_service_name }} is UP: {{ docker_compose_up.services.promtail.promtail.state.running }}"
      - " The container {{ alertmanager_service_name }} is UP: {{ docker_compose_up.services.alertmanager.alertmanager.state.running }}"
      - " The container {{ cadvisor_service_name }} is UP: {{ docker_compose_up.services.cadvisor.cadvisor.state.running }}"
  tags:
    - check            

- ansible.builtin.assert:
    that:
      - "docker_compose_up.services.{{ prometheus_service_name }}.{{ prometheus_container_name }}.state.running"
      - "docker_compose_up.services.{{ node_exporter_service_name }}.{{ node_exporter_service_name }}.state.running"
      - "docker_compose_up.services.{{ grafana_service_name }}.{{ grafana_service_name }}.state.running"
      - "docker_compose_up.services.{{ loki_service_name }}.{{ loki_service_name }}.state.running"
      - "docker_compose_up.services.{{ promtail_service_name }}.{{ promtail_service_name }}.state.running"
      - "docker_compose_up.services.{{ alertmanager_service_name }}.{{ alertmanager_service_name }}.state.running"
      - "docker_compose_up.services.{{ cadvisor_service_name }}.{{ cadvisor_service_name }}.state.running"
  tags:
    - check      
