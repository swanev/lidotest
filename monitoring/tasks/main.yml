---
# tasks file for monitoring

#Prapare directories

- name: Check that docker and docker-compose are present
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - docker
    - docker-compose
  tags:
    - never   
    - install
    - docker-daemon

- name: Make grafana data directory writeable
  ansible.builtin.file:
    path: "{{ item }}"
    owner: 472
    group: 0
    recurse: yes
    state: directory
    mode: 0755    
  loop:
    - "{{ grafana_docker_data_dir }}"
    - "{{ grafana_docker_conf_dir }}"
    - "{{ grafana_docker_log_dir }}"
    - "{{ grafana_docker_dir }}"
    - "{{ grafana_docker_dashboards_dir }}"
  tags:
    - install
    - prepare_dirs      

- name: Prepare dirs
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "{{ loki_docker_conf_dir }}"
    - "{{ loki_docker_log_dir }}"
    - "{{ loki_docker_dir }}"
    - "{{ promtail_docker_conf_dir }}"
    - "{{ promtail_docker_dir }}"
    - "{{ node_exporter_dir }}"
    - "{{ node_exporter_file_dir }}"
    - "{{ alertmanager_docker_dir }}"
    - "{{ alertmanager_docker_conf_dir }}"
    - "{{ alertmanager_docker_data_dir }}"
    - "{{ prometheus_docker_data_dir }}"
    - "{{ prometheus_docker_rules_dir }}"    
  tags:
    - install
    - prepare_dirs

# Prepare docker daemon dir

- name: Prepare docker daemon dir
  ansible.builtin.file:
    path: "{{ docker_daemon_service_dir }}"
    state: directory
    mode: 0755    
  tags:
    - never  
    - install
    - docker-daemon

- name: Copy docker daemon options
  ansible.builtin.template:
    src: options.conf.j2
    dest: "{{ docker_daemon_service_dir }}/options.conf"
    mode: 0644
  tags:
    - never   
    - install
    - docker-daemon

- name: Restart docker daemon
  ansible.builtin.systemd:
    name: docker
    state: restarted
    daemon_reload: yes
  tags:
    - never   
    - install
    - docker-daemon

# Loki log plugin for docker

## install loki plugin for docker logs

- name: install loki plugin for docker logs
  ansible.builtin.shell: docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions && docker plugin ls
  ignore_errors: true
  tags:
    - never
    - install    
    - install-loki-plugin

## Enable loki plugin for docker logs

- name: install loki plugin for docker logs
  ansible.builtin.shell: docker plugin enable loki
  ignore_errors: true
  tags:
    - never
    - install    
    - enable-loki-plugin     

## Upgrade loki plugin for docker logs

- name: Upgrade loki plugin for docker log
  ansible.builtin.shell: docker plugin disable loki --force && docker plugin upgrade loki grafana/loki-docker-driver:latest --grant-all-permissions && docker plugin enable loki
  ignore_errors: true
  tags:
    - never
    - upgrade-loki-plugin     

- name: Restart docker
  ansible.builtin.systemd:
    name: docker
    state: restarted   
  tags:
    - never
    - install    
    - install-loki-plugin
    - enable-loki-plugin         
    - uninstall-loki-plugin       

## Uninstall loki plugin for docker logs

- name: Disable loki plugin for docker logs
  ansible.builtin.shell: docker plugin disable loki
  ignore_errors: true
  tags:
    - never
    - install    
    - disable-loki-plugin
    - uninstall-loki-plugin      

- name: Uninstall loki plugin for docker logs
  ansible.builtin.shell: docker plugin disable loki --force && docker plugin rm loki
  ignore_errors: true   
  tags:
    - never 
    - uninstall-loki-plugin 

# COPY CONFIG FILES

## Copy alertmanager config file

- name: Copy alertmanager config template
  ansible.builtin.copy:
    src: "{{ file_dir }}/alertmanager.yml"
    dest: "{{ alertmanager_docker_conf_dir }}/alertmanager.yml"
    mode: 0644 
  tags:
    - install
    - upgrade

- name: Copy alert rules
  ansible.builtin.copy:
    src: "{{ file_dir }}/alert_rules/{{ item }}"
    dest: "{{ prometheus_docker_rules_dir }}/{{ item }}"
  loop:
    - nodes.yml
  tags:
    - install
    - upgrade    

## Copy loki config file

- name: Copy loki config template
  ansible.builtin.template:
    src: loki-config.yml.j2
    dest: "{{ loki_docker_conf_dir }}/local-config.yaml"
    mode: 0644    
  tags:
    - install
    - upgrade

## Copy prometheus config file

- name: Copy prometheus config template
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_docker_data_dir }}/prometheus.yml"
    mode: 0644     
  tags:
    - install
    - upgrade

## Copy promtail config file

- name: Copy promtail config template
  ansible.builtin.template:
    src: promtail-config.yml.j2
    dest: "{{ promtail_docker_conf_dir }}/config.yml"
    mode: 0644     
  tags:
    - install
    - upgrade

## Copy docker-compose file
- name: Copy docker-compose template
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ base_path }}/docker-compose.yml"
    mode: 0644     
  tags:
    - install
    - upgrade    

## Copy grafana.ini file
- name: Copy grafafna.ini template
  ansible.builtin.template:
    src: grafana.ini
    dest: "{{ grafana_docker_conf_dir }}/grafana.ini"
    owner: 472
    group: 0
    mode: 0644    
  tags:
    - install
    - upgrade    

## Copy datasources

- name: Copy grafana datasources
  ansible.builtin.template:
    src: datasource.yml.j2
    dest: "{{ grafana_docker_conf_dir }}/datasource.yml"
    owner: 472
    group: 0
    mode: 0644        
  tags:
    - install
    - upgrade

## Copy dashboards

- name: Copy grafana dashboards
  ansible.builtin.copy:
    src: "{{ file_dir }}/dashboards/{{ item }}"
    dest: "{{ grafana_docker_dashboards_dir }}"
    owner: 472
    group: 0
    mode: 0644        
  loop:
    - Alertmanager.json
    - Docker_monitoring.json
    - Node_Exporter_Full.json     
  tags:
    - install
    - upgrade

- name: Copy grafana dashboard upload script
  ansible.builtin.template:
    src: grafana_dashbords_import.sh.j2
    dest: "{{ grafana_docker_dir }}/grafana_dashbords_import.sh"
    owner: 472
    group: 0
    mode: 0644        
  tags:
    - install
    - upgrade

- name: Grafana dashboard import
  shell: "{{grafana_docker_dir}}/grafana_import_dashbords_and_users.sh"        
- name: Stop monitoring
  ansible.builtin.shell: docker-compose -f "{{ base_path }}/docker-compose.yml" down
  tags:
    - remove
    - upgrade

## Start monitoring docker-compose file

- name: Revive monitoring
  ansible.builtin.shell: docker-compose -f "{{ base_path }}/docker-compose.yml" up -d
  tags:
    - start
    - install
    - upgrade

- name: Upload dashboards
  ansible.builtin.shell: /bin/bash {{ grafana_docker_dir }}/grafana_dashbords_import.sh
  tags:
    - install
    - upgrade     
